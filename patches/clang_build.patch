@@ -46,7 +46,7 @@
 THIRD_PARTY_DIR = os.path.join(CHROMIUM_DIR, 'third_party')
 LLVM_DIR = os.path.join(THIRD_PARTY_DIR, 'llvm')
 COMPILER_RT_DIR = os.path.join(LLVM_DIR, 'compiler-rt')
-LLVM_GIT_URL = ('https://chromium.9oo91esource.qjz9zk/external/' +
+LLVM_GIT_URL = ('https://' +
                 'github.com/llvm/llvm-project')
 LLVM_BOOTSTRAP_DIR = os.path.join(THIRD_PARTY_DIR, 'llvm-bootstrap')
 LLVM_BOOTSTRAP_INSTALL_DIR = os.path.join(THIRD_PARTY_DIR,
@@ -322,7 +322,8 @@
   if os.path.exists(dirs.src_dir):
     RmTree(dirs.src_dir)
   zip_name = LIBXML2_VERSION + '.tar.gz'
-  DownloadAndUnpack(CDS_URL + '/tools/' + zip_name, dirs.unzip_dir)
+  DownloadAndUnpack('https://github.com/GNOME/libxml2/archive/refs/tags/v2.9.12.tar.gz', dirs.unzip_dir)
+  os.rename(f"{dirs.unzip_dir}/libxml2-2.9.12",f"{dirs.unzip_dir}/libxml2-v2.9.12")
   os.mkdir(dirs.build_dir)
   os.chdir(dirs.build_dir)
 
@@ -437,7 +438,7 @@
   if os.path.exists(dirs.src_dir):
     RmTree(dirs.src_dir)
   zip_name = ZSTD_VERSION + '.tar.gz'
-  DownloadAndUnpack(CDS_URL + '/tools/' + zip_name, dirs.unzip_dir)
+  DownloadAndUnpack('https://github.com/facebook/zstd/releases/download/v1.5.5/zstd-1.5.5.tar.gz', dirs.unzip_dir)
   os.mkdir(dirs.build_dir)
   os.chdir(dirs.build_dir)
 
@@ -808,7 +809,7 @@
   cxxflags = []
   ldflags = []
 
-  targets = 'AArch64;ARM;LoongArch;Mips;PowerPC;RISCV;SystemZ;WebAssembly;X86'
+  targets = 'X86'
   projects = 'clang;lld'
   if not args.no_tools:
     projects += ';clang-tools-extra'
@@ -767,7 +767,7 @@
     ninja_dir = os.path.join(THIRD_PARTY_DIR, 'ninja')
     os.environ['PATH'] = ninja_dir + os.pathsep + os.environ.get('PATH', '')
 
-  if sys.platform.startswith('linux'):
+  if sys.platform.startswith('notlinux'):
     sysroot_amd64 = DownloadDebianSysroot('amd64', args.skip_checkout)
     sysroot_i386 = DownloadDebianSysroot('i386', args.skip_checkout)
     sysroot_arm = DownloadDebianSysroot('arm', args.skip_checkout)
@@ -1175,20 +1176,20 @@
   runtimes_triples_args = {}
 
   if sys.platform.startswith('linux'):
-    runtimes_triples_args['i386-unknown-linux-gnu'] = {
-        "args": [
-            'CMAKE_SYSROOT=%s' % sysroot_i386,
-            # TODO(crbug.com/40242553): pass proper flags to i386 tests so they compile correctly
-            'LLVM_INCLUDE_TESTS=OFF',
-        ],
-        "profile":
-        True,
-        "sanitizers":
-        True,
-    }
+    #runtimes_triples_args['i386-unknown-linux-gnu'] = {
+    #    "args": [
+    #        'CMAKE_SYSROOT=%s' % sysroot_i386,
+    #        # TODO(https://crbug.com/1374690): pass proper flags to i386 tests so they compile correctly
+    #        'LLVM_INCLUDE_TESTS=OFF',
+    #    ],
+    #    "profile":
+    #    True,
+    #    "sanitizers":
+    #    True,
+    #}
     runtimes_triples_args['x86_64-unknown-linux-gnu'] = {
         "args": [
-            'CMAKE_SYSROOT=%s' % sysroot_amd64,
+            #'CMAKE_SYSROOT=%s' % sysroot_amd64,
         ],
         "profile": True,
         "sanitizers": True,
@@ -1200,28 +1201,28 @@
     # results on
     # https://chromium-review.9oo91esource.qjz9zk/c/chromium/src/+/3702739/4
     # Maybe it should work for builtins too?
-    runtimes_triples_args['armv7-unknown-linux-gnueabihf'] = {
-        "args": [
-            'CMAKE_SYSROOT=%s' % sysroot_arm,
-            # Can't run tests on x86 host.
-            'LLVM_INCLUDE_TESTS=OFF',
-        ],
-        "profile":
-        True,
-        "sanitizers":
-        True,
-    }
-    runtimes_triples_args['aarch64-unknown-linux-gnu'] = {
-        "args": [
-            'CMAKE_SYSROOT=%s' % sysroot_arm64,
-            # Can't run tests on x86 host.
-            'LLVM_INCLUDE_TESTS=OFF',
-        ],
-        "profile":
-        True,
-        "sanitizers":
-        True,
-    }
+    #runtimes_triples_args['armv7-unknown-linux-gnueabihf'] = {
+    #    "args": [
+    #        'CMAKE_SYSROOT=%s' % sysroot_arm,
+    #        # Can't run tests on x86 host.
+    #        'LLVM_INCLUDE_TESTS=OFF',
+    #    ],
+    #    "profile":
+    #    True,
+    #    "sanitizers":
+    #    True,
+    #}
+    #runtimes_triples_args['aarch64-unknown-linux-gnu'] = {
+    #    "args": [
+    #        'CMAKE_SYSROOT=%s' % sysroot_arm64,
+    #        # Can't run tests on x86 host.
+    #        'LLVM_INCLUDE_TESTS=OFF',
+    #    ],
+    #    "profile":
+    #    True,
+    #    "sanitizers":
+    #    True,
+    #}
   elif sys.platform == 'win32':
     sysroot = os.path.dirname(os.path.dirname(GetWinSDKDir()))
     runtimes_triples_args['i386-pc-windows-msvc'] = {
